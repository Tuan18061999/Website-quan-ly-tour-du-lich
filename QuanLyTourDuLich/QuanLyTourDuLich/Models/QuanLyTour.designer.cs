#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyTourDuLich.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_TOUR")]
	public partial class QuanLyTourDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDatHang(ChiTietDatHang instance);
    partial void UpdateChiTietDatHang(ChiTietDatHang instance);
    partial void DeleteChiTietDatHang(ChiTietDatHang instance);
    partial void InsertTOUR(TOUR instance);
    partial void UpdateTOUR(TOUR instance);
    partial void DeleteTOUR(TOUR instance);
    partial void InsertChiTietDichVu(ChiTietDichVu instance);
    partial void UpdateChiTietDichVu(ChiTietDichVu instance);
    partial void DeleteChiTietDichVu(ChiTietDichVu instance);
    partial void InsertChiTietPhuongTien(ChiTietPhuongTien instance);
    partial void UpdateChiTietPhuongTien(ChiTietPhuongTien instance);
    partial void DeleteChiTietPhuongTien(ChiTietPhuongTien instance);
    partial void InsertChucVu(ChucVu instance);
    partial void UpdateChucVu(ChucVu instance);
    partial void DeleteChucVu(ChucVu instance);
    partial void InsertDanhGia(DanhGia instance);
    partial void UpdateDanhGia(DanhGia instance);
    partial void DeleteDanhGia(DanhGia instance);
    partial void InsertDatHang(DatHang instance);
    partial void UpdateDatHang(DatHang instance);
    partial void DeleteDatHang(DatHang instance);
    partial void InsertDiaDiemThamQuan(DiaDiemThamQuan instance);
    partial void UpdateDiaDiemThamQuan(DiaDiemThamQuan instance);
    partial void DeleteDiaDiemThamQuan(DiaDiemThamQuan instance);
    partial void InsertDichVu(DichVu instance);
    partial void UpdateDichVu(DichVu instance);
    partial void DeleteDichVu(DichVu instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiTaiKhoan(LoaiTaiKhoan instance);
    partial void UpdateLoaiTaiKhoan(LoaiTaiKhoan instance);
    partial void DeleteLoaiTaiKhoan(LoaiTaiKhoan instance);
    partial void InsertLoaiTour(LoaiTour instance);
    partial void UpdateLoaiTour(LoaiTour instance);
    partial void DeleteLoaiTour(LoaiTour instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPHUONGTIEN(PHUONGTIEN instance);
    partial void UpdatePHUONGTIEN(PHUONGTIEN instance);
    partial void DeletePHUONGTIEN(PHUONGTIEN instance);
    partial void InsertQuocTich(QuocTich instance);
    partial void UpdateQuocTich(QuocTich instance);
    partial void DeleteQuocTich(QuocTich instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertTinh(Tinh instance);
    partial void UpdateTinh(Tinh instance);
    partial void DeleteTinh(Tinh instance);
    #endregion
		
		public QuanLyTourDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_TOURConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTourDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTourDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTourDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTourDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietDatHang> ChiTietDatHangs
		{
			get
			{
				return this.GetTable<ChiTietDatHang>();
			}
		}
		
		public System.Data.Linq.Table<TOUR> TOURs
		{
			get
			{
				return this.GetTable<TOUR>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDichVu> ChiTietDichVus
		{
			get
			{
				return this.GetTable<ChiTietDichVu>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhuongTien> ChiTietPhuongTiens
		{
			get
			{
				return this.GetTable<ChiTietPhuongTien>();
			}
		}
		
		public System.Data.Linq.Table<ChucVu> ChucVus
		{
			get
			{
				return this.GetTable<ChucVu>();
			}
		}
		
		public System.Data.Linq.Table<DanhGia> DanhGias
		{
			get
			{
				return this.GetTable<DanhGia>();
			}
		}
		
		public System.Data.Linq.Table<DatHang> DatHangs
		{
			get
			{
				return this.GetTable<DatHang>();
			}
		}
		
		public System.Data.Linq.Table<DiaDiemThamQuan> DiaDiemThamQuans
		{
			get
			{
				return this.GetTable<DiaDiemThamQuan>();
			}
		}
		
		public System.Data.Linq.Table<DichVu> DichVus
		{
			get
			{
				return this.GetTable<DichVu>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTaiKhoan> LoaiTaiKhoans
		{
			get
			{
				return this.GetTable<LoaiTaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTour> LoaiTours
		{
			get
			{
				return this.GetTable<LoaiTour>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PHUONGTIEN> PHUONGTIENs
		{
			get
			{
				return this.GetTable<PHUONGTIEN>();
			}
		}
		
		public System.Data.Linq.Table<QuocTich> QuocTiches
		{
			get
			{
				return this.GetTable<QuocTich>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<Tinh> Tinhs
		{
			get
			{
				return this.GetTable<Tinh>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDatHang")]
	public partial class ChiTietDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSoTour;
		
		private int _MaDatHang;
		
		private System.Nullable<int> _ThanhTien;
		
		private System.Nullable<int> _SoLuongVe;
		
		private EntityRef<TOUR> _TOUR;
		
		private EntityRef<DatHang> _DatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoTourChanging(int value);
    partial void OnMaSoTourChanged();
    partial void OnMaDatHangChanging(int value);
    partial void OnMaDatHangChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    partial void OnSoLuongVeChanging(System.Nullable<int> value);
    partial void OnSoLuongVeChanged();
    #endregion
		
		public ChiTietDatHang()
		{
			this._TOUR = default(EntityRef<TOUR>);
			this._DatHang = default(EntityRef<DatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoTour", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSoTour
		{
			get
			{
				return this._MaSoTour;
			}
			set
			{
				if ((this._MaSoTour != value))
				{
					if (this._TOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoTourChanging(value);
					this.SendPropertyChanging();
					this._MaSoTour = value;
					this.SendPropertyChanged("MaSoTour");
					this.OnMaSoTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDatHang
		{
			get
			{
				return this._MaDatHang;
			}
			set
			{
				if ((this._MaDatHang != value))
				{
					if (this._DatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDatHangChanging(value);
					this.SendPropertyChanging();
					this._MaDatHang = value;
					this.SendPropertyChanged("MaDatHang");
					this.OnMaDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongVe", DbType="Int")]
		public System.Nullable<int> SoLuongVe
		{
			get
			{
				return this._SoLuongVe;
			}
			set
			{
				if ((this._SoLuongVe != value))
				{
					this.OnSoLuongVeChanging(value);
					this.SendPropertyChanging();
					this._SoLuongVe = value;
					this.SendPropertyChanged("SoLuongVe");
					this.OnSoLuongVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_ChiTietDatHang", Storage="_TOUR", ThisKey="MaSoTour", OtherKey="MaSoTour", IsForeignKey=true)]
		public TOUR TOUR
		{
			get
			{
				return this._TOUR.Entity;
			}
			set
			{
				TOUR previousValue = this._TOUR.Entity;
				if (((previousValue != value) 
							|| (this._TOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUR.Entity = null;
						previousValue.ChiTietDatHangs.Remove(this);
					}
					this._TOUR.Entity = value;
					if ((value != null))
					{
						value.ChiTietDatHangs.Add(this);
						this._MaSoTour = value.MaSoTour;
					}
					else
					{
						this._MaSoTour = default(int);
					}
					this.SendPropertyChanged("TOUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatHang_ChiTietDatHang", Storage="_DatHang", ThisKey="MaDatHang", OtherKey="MaDatHang", IsForeignKey=true)]
		public DatHang DatHang
		{
			get
			{
				return this._DatHang.Entity;
			}
			set
			{
				DatHang previousValue = this._DatHang.Entity;
				if (((previousValue != value) 
							|| (this._DatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatHang.Entity = null;
						previousValue.ChiTietDatHangs.Remove(this);
					}
					this._DatHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDatHangs.Add(this);
						this._MaDatHang = value.MaDatHang;
					}
					else
					{
						this._MaDatHang = default(int);
					}
					this.SendPropertyChanged("DatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TOUR")]
	public partial class TOUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSoTour;
		
		private string _TenTour;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private string _MoTaTour;
		
		private string _HinhAnhTour;
		
		private System.Nullable<decimal> _Gia;
		
		private System.Nullable<int> _MaLoaiTour;
		
		private System.Nullable<int> _MaSoTinh;
		
		private EntitySet<ChiTietDatHang> _ChiTietDatHangs;
		
		private EntitySet<ChiTietDichVu> _ChiTietDichVus;
		
		private EntitySet<ChiTietPhuongTien> _ChiTietPhuongTiens;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<DiaDiemThamQuan> _DiaDiemThamQuans;
		
		private EntityRef<LoaiTour> _LoaiTour;
		
		private EntityRef<Tinh> _Tinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoTourChanging(int value);
    partial void OnMaSoTourChanged();
    partial void OnTenTourChanging(string value);
    partial void OnTenTourChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    partial void OnMoTaTourChanging(string value);
    partial void OnMoTaTourChanged();
    partial void OnHinhAnhTourChanging(string value);
    partial void OnHinhAnhTourChanged();
    partial void OnGiaChanging(System.Nullable<decimal> value);
    partial void OnGiaChanged();
    partial void OnMaLoaiTourChanging(System.Nullable<int> value);
    partial void OnMaLoaiTourChanged();
    partial void OnMaSoTinhChanging(System.Nullable<int> value);
    partial void OnMaSoTinhChanged();
    #endregion
		
		public TOUR()
		{
			this._ChiTietDatHangs = new EntitySet<ChiTietDatHang>(new Action<ChiTietDatHang>(this.attach_ChiTietDatHangs), new Action<ChiTietDatHang>(this.detach_ChiTietDatHangs));
			this._ChiTietDichVus = new EntitySet<ChiTietDichVu>(new Action<ChiTietDichVu>(this.attach_ChiTietDichVus), new Action<ChiTietDichVu>(this.detach_ChiTietDichVus));
			this._ChiTietPhuongTiens = new EntitySet<ChiTietPhuongTien>(new Action<ChiTietPhuongTien>(this.attach_ChiTietPhuongTiens), new Action<ChiTietPhuongTien>(this.detach_ChiTietPhuongTiens));
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._DiaDiemThamQuans = new EntitySet<DiaDiemThamQuan>(new Action<DiaDiemThamQuan>(this.attach_DiaDiemThamQuans), new Action<DiaDiemThamQuan>(this.detach_DiaDiemThamQuans));
			this._LoaiTour = default(EntityRef<LoaiTour>);
			this._Tinh = default(EntityRef<Tinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoTour", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSoTour
		{
			get
			{
				return this._MaSoTour;
			}
			set
			{
				if ((this._MaSoTour != value))
				{
					this.OnMaSoTourChanging(value);
					this.SendPropertyChanging();
					this._MaSoTour = value;
					this.SendPropertyChanged("MaSoTour");
					this.OnMaSoTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTour", DbType="NVarChar(MAX)")]
		public string TenTour
		{
			get
			{
				return this._TenTour;
			}
			set
			{
				if ((this._TenTour != value))
				{
					this.OnTenTourChanging(value);
					this.SendPropertyChanging();
					this._TenTour = value;
					this.SendPropertyChanged("TenTour");
					this.OnTenTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaTour", DbType="NVarChar(MAX)")]
		public string MoTaTour
		{
			get
			{
				return this._MoTaTour;
			}
			set
			{
				if ((this._MoTaTour != value))
				{
					this.OnMoTaTourChanging(value);
					this.SendPropertyChanging();
					this._MoTaTour = value;
					this.SendPropertyChanged("MoTaTour");
					this.OnMoTaTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnhTour", DbType="NChar(50)")]
		public string HinhAnhTour
		{
			get
			{
				return this._HinhAnhTour;
			}
			set
			{
				if ((this._HinhAnhTour != value))
				{
					this.OnHinhAnhTourChanging(value);
					this.SendPropertyChanging();
					this._HinhAnhTour = value;
					this.SendPropertyChanged("HinhAnhTour");
					this.OnHinhAnhTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTour", DbType="Int")]
		public System.Nullable<int> MaLoaiTour
		{
			get
			{
				return this._MaLoaiTour;
			}
			set
			{
				if ((this._MaLoaiTour != value))
				{
					if (this._LoaiTour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiTourChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTour = value;
					this.SendPropertyChanged("MaLoaiTour");
					this.OnMaLoaiTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoTinh", DbType="Int")]
		public System.Nullable<int> MaSoTinh
		{
			get
			{
				return this._MaSoTinh;
			}
			set
			{
				if ((this._MaSoTinh != value))
				{
					if (this._Tinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoTinhChanging(value);
					this.SendPropertyChanging();
					this._MaSoTinh = value;
					this.SendPropertyChanged("MaSoTinh");
					this.OnMaSoTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_ChiTietDatHang", Storage="_ChiTietDatHangs", ThisKey="MaSoTour", OtherKey="MaSoTour")]
		public EntitySet<ChiTietDatHang> ChiTietDatHangs
		{
			get
			{
				return this._ChiTietDatHangs;
			}
			set
			{
				this._ChiTietDatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_ChiTietDichVu", Storage="_ChiTietDichVus", ThisKey="MaSoTour", OtherKey="MaSoTour")]
		public EntitySet<ChiTietDichVu> ChiTietDichVus
		{
			get
			{
				return this._ChiTietDichVus;
			}
			set
			{
				this._ChiTietDichVus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_ChiTietPhuongTien", Storage="_ChiTietPhuongTiens", ThisKey="MaSoTour", OtherKey="MaSoTour")]
		public EntitySet<ChiTietPhuongTien> ChiTietPhuongTiens
		{
			get
			{
				return this._ChiTietPhuongTiens;
			}
			set
			{
				this._ChiTietPhuongTiens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_DanhGia", Storage="_DanhGias", ThisKey="MaSoTour", OtherKey="MaSoTour")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_DiaDiemThamQuan", Storage="_DiaDiemThamQuans", ThisKey="MaSoTour", OtherKey="MaSoTour")]
		public EntitySet<DiaDiemThamQuan> DiaDiemThamQuans
		{
			get
			{
				return this._DiaDiemThamQuans;
			}
			set
			{
				this._DiaDiemThamQuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTour_TOUR", Storage="_LoaiTour", ThisKey="MaLoaiTour", OtherKey="MaLoaiTour", IsForeignKey=true)]
		public LoaiTour LoaiTour
		{
			get
			{
				return this._LoaiTour.Entity;
			}
			set
			{
				LoaiTour previousValue = this._LoaiTour.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTour.Entity = null;
						previousValue.TOURs.Remove(this);
					}
					this._LoaiTour.Entity = value;
					if ((value != null))
					{
						value.TOURs.Add(this);
						this._MaLoaiTour = value.MaLoaiTour;
					}
					else
					{
						this._MaLoaiTour = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiTour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tinh_TOUR", Storage="_Tinh", ThisKey="MaSoTinh", OtherKey="MaSoTinh", IsForeignKey=true)]
		public Tinh Tinh
		{
			get
			{
				return this._Tinh.Entity;
			}
			set
			{
				Tinh previousValue = this._Tinh.Entity;
				if (((previousValue != value) 
							|| (this._Tinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tinh.Entity = null;
						previousValue.TOURs.Remove(this);
					}
					this._Tinh.Entity = value;
					if ((value != null))
					{
						value.TOURs.Add(this);
						this._MaSoTinh = value.MaSoTinh;
					}
					else
					{
						this._MaSoTinh = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDatHangs(ChiTietDatHang entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = this;
		}
		
		private void detach_ChiTietDatHangs(ChiTietDatHang entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = null;
		}
		
		private void attach_ChiTietDichVus(ChiTietDichVu entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = this;
		}
		
		private void detach_ChiTietDichVus(ChiTietDichVu entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = null;
		}
		
		private void attach_ChiTietPhuongTiens(ChiTietPhuongTien entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = this;
		}
		
		private void detach_ChiTietPhuongTiens(ChiTietPhuongTien entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = null;
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = null;
		}
		
		private void attach_DiaDiemThamQuans(DiaDiemThamQuan entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = this;
		}
		
		private void detach_DiaDiemThamQuans(DiaDiemThamQuan entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDichVu")]
	public partial class ChiTietDichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSoTour;
		
		private int _MaDichVu;
		
		private System.Nullable<int> _DuocHuong;
		
		private EntityRef<TOUR> _TOUR;
		
		private EntityRef<DichVu> _DichVu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoTourChanging(int value);
    partial void OnMaSoTourChanged();
    partial void OnMaDichVuChanging(int value);
    partial void OnMaDichVuChanged();
    partial void OnDuocHuongChanging(System.Nullable<int> value);
    partial void OnDuocHuongChanged();
    #endregion
		
		public ChiTietDichVu()
		{
			this._TOUR = default(EntityRef<TOUR>);
			this._DichVu = default(EntityRef<DichVu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoTour", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSoTour
		{
			get
			{
				return this._MaSoTour;
			}
			set
			{
				if ((this._MaSoTour != value))
				{
					if (this._TOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoTourChanging(value);
					this.SendPropertyChanging();
					this._MaSoTour = value;
					this.SendPropertyChanged("MaSoTour");
					this.OnMaSoTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDichVu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDichVu
		{
			get
			{
				return this._MaDichVu;
			}
			set
			{
				if ((this._MaDichVu != value))
				{
					if (this._DichVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaDichVu = value;
					this.SendPropertyChanged("MaDichVu");
					this.OnMaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuocHuong", DbType="Int")]
		public System.Nullable<int> DuocHuong
		{
			get
			{
				return this._DuocHuong;
			}
			set
			{
				if ((this._DuocHuong != value))
				{
					this.OnDuocHuongChanging(value);
					this.SendPropertyChanging();
					this._DuocHuong = value;
					this.SendPropertyChanged("DuocHuong");
					this.OnDuocHuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_ChiTietDichVu", Storage="_TOUR", ThisKey="MaSoTour", OtherKey="MaSoTour", IsForeignKey=true)]
		public TOUR TOUR
		{
			get
			{
				return this._TOUR.Entity;
			}
			set
			{
				TOUR previousValue = this._TOUR.Entity;
				if (((previousValue != value) 
							|| (this._TOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUR.Entity = null;
						previousValue.ChiTietDichVus.Remove(this);
					}
					this._TOUR.Entity = value;
					if ((value != null))
					{
						value.ChiTietDichVus.Add(this);
						this._MaSoTour = value.MaSoTour;
					}
					else
					{
						this._MaSoTour = default(int);
					}
					this.SendPropertyChanged("TOUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_ChiTietDichVu", Storage="_DichVu", ThisKey="MaDichVu", OtherKey="MaDichVu", IsForeignKey=true)]
		public DichVu DichVu
		{
			get
			{
				return this._DichVu.Entity;
			}
			set
			{
				DichVu previousValue = this._DichVu.Entity;
				if (((previousValue != value) 
							|| (this._DichVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DichVu.Entity = null;
						previousValue.ChiTietDichVus.Remove(this);
					}
					this._DichVu.Entity = value;
					if ((value != null))
					{
						value.ChiTietDichVus.Add(this);
						this._MaDichVu = value.MaDichVu;
					}
					else
					{
						this._MaDichVu = default(int);
					}
					this.SendPropertyChanged("DichVu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhuongTien")]
	public partial class ChiTietPhuongTien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSoTour;
		
		private int _MaSoPhuongTien;
		
		private System.Nullable<int> _SucChua;
		
		private EntityRef<TOUR> _TOUR;
		
		private EntityRef<PHUONGTIEN> _PHUONGTIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoTourChanging(int value);
    partial void OnMaSoTourChanged();
    partial void OnMaSoPhuongTienChanging(int value);
    partial void OnMaSoPhuongTienChanged();
    partial void OnSucChuaChanging(System.Nullable<int> value);
    partial void OnSucChuaChanged();
    #endregion
		
		public ChiTietPhuongTien()
		{
			this._TOUR = default(EntityRef<TOUR>);
			this._PHUONGTIEN = default(EntityRef<PHUONGTIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoTour", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSoTour
		{
			get
			{
				return this._MaSoTour;
			}
			set
			{
				if ((this._MaSoTour != value))
				{
					if (this._TOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoTourChanging(value);
					this.SendPropertyChanging();
					this._MaSoTour = value;
					this.SendPropertyChanged("MaSoTour");
					this.OnMaSoTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoPhuongTien", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSoPhuongTien
		{
			get
			{
				return this._MaSoPhuongTien;
			}
			set
			{
				if ((this._MaSoPhuongTien != value))
				{
					if (this._PHUONGTIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoPhuongTienChanging(value);
					this.SendPropertyChanging();
					this._MaSoPhuongTien = value;
					this.SendPropertyChanged("MaSoPhuongTien");
					this.OnMaSoPhuongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SucChua", DbType="Int")]
		public System.Nullable<int> SucChua
		{
			get
			{
				return this._SucChua;
			}
			set
			{
				if ((this._SucChua != value))
				{
					this.OnSucChuaChanging(value);
					this.SendPropertyChanging();
					this._SucChua = value;
					this.SendPropertyChanged("SucChua");
					this.OnSucChuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_ChiTietPhuongTien", Storage="_TOUR", ThisKey="MaSoTour", OtherKey="MaSoTour", IsForeignKey=true)]
		public TOUR TOUR
		{
			get
			{
				return this._TOUR.Entity;
			}
			set
			{
				TOUR previousValue = this._TOUR.Entity;
				if (((previousValue != value) 
							|| (this._TOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUR.Entity = null;
						previousValue.ChiTietPhuongTiens.Remove(this);
					}
					this._TOUR.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhuongTiens.Add(this);
						this._MaSoTour = value.MaSoTour;
					}
					else
					{
						this._MaSoTour = default(int);
					}
					this.SendPropertyChanged("TOUR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUONGTIEN_ChiTietPhuongTien", Storage="_PHUONGTIEN", ThisKey="MaSoPhuongTien", OtherKey="MaSoPhuongTien", IsForeignKey=true)]
		public PHUONGTIEN PHUONGTIEN
		{
			get
			{
				return this._PHUONGTIEN.Entity;
			}
			set
			{
				PHUONGTIEN previousValue = this._PHUONGTIEN.Entity;
				if (((previousValue != value) 
							|| (this._PHUONGTIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHUONGTIEN.Entity = null;
						previousValue.ChiTietPhuongTiens.Remove(this);
					}
					this._PHUONGTIEN.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhuongTiens.Add(this);
						this._MaSoPhuongTien = value.MaSoPhuongTien;
					}
					else
					{
						this._MaSoPhuongTien = default(int);
					}
					this.SendPropertyChanged("PHUONGTIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucVu")]
	public partial class ChucVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSoChucVu;
		
		private string _TenChucVu;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoChucVuChanging(int value);
    partial void OnMaSoChucVuChanged();
    partial void OnTenChucVuChanging(string value);
    partial void OnTenChucVuChanged();
    #endregion
		
		public ChucVu()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoChucVu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSoChucVu
		{
			get
			{
				return this._MaSoChucVu;
			}
			set
			{
				if ((this._MaSoChucVu != value))
				{
					this.OnMaSoChucVuChanging(value);
					this.SendPropertyChanging();
					this._MaSoChucVu = value;
					this.SendPropertyChanged("MaSoChucVu");
					this.OnMaSoChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChucVu", DbType="NVarChar(50)")]
		public string TenChucVu
		{
			get
			{
				return this._TenChucVu;
			}
			set
			{
				if ((this._TenChucVu != value))
				{
					this.OnTenChucVuChanging(value);
					this.SendPropertyChanging();
					this._TenChucVu = value;
					this.SendPropertyChanged("TenChucVu");
					this.OnTenChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_NhanVien", Storage="_NhanViens", ThisKey="MaSoChucVu", OtherKey="MaSoChucVu")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhGia")]
	public partial class DanhGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDanhGia;
		
		private int _MaSoTour;
		
		private System.Nullable<int> _LuotYeuThich;
		
		private System.Nullable<int> _SoSao;
		
		private EntityRef<TOUR> _TOUR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhGiaChanging(int value);
    partial void OnMaDanhGiaChanged();
    partial void OnMaSoTourChanging(int value);
    partial void OnMaSoTourChanged();
    partial void OnLuotYeuThichChanging(System.Nullable<int> value);
    partial void OnLuotYeuThichChanged();
    partial void OnSoSaoChanging(System.Nullable<int> value);
    partial void OnSoSaoChanged();
    #endregion
		
		public DanhGia()
		{
			this._TOUR = default(EntityRef<TOUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhGia", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDanhGia
		{
			get
			{
				return this._MaDanhGia;
			}
			set
			{
				if ((this._MaDanhGia != value))
				{
					this.OnMaDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._MaDanhGia = value;
					this.SendPropertyChanged("MaDanhGia");
					this.OnMaDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoTour", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSoTour
		{
			get
			{
				return this._MaSoTour;
			}
			set
			{
				if ((this._MaSoTour != value))
				{
					if (this._TOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoTourChanging(value);
					this.SendPropertyChanging();
					this._MaSoTour = value;
					this.SendPropertyChanged("MaSoTour");
					this.OnMaSoTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuotYeuThich", DbType="Int")]
		public System.Nullable<int> LuotYeuThich
		{
			get
			{
				return this._LuotYeuThich;
			}
			set
			{
				if ((this._LuotYeuThich != value))
				{
					this.OnLuotYeuThichChanging(value);
					this.SendPropertyChanging();
					this._LuotYeuThich = value;
					this.SendPropertyChanged("LuotYeuThich");
					this.OnLuotYeuThichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoSao", DbType="Int")]
		public System.Nullable<int> SoSao
		{
			get
			{
				return this._SoSao;
			}
			set
			{
				if ((this._SoSao != value))
				{
					this.OnSoSaoChanging(value);
					this.SendPropertyChanging();
					this._SoSao = value;
					this.SendPropertyChanged("SoSao");
					this.OnSoSaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_DanhGia", Storage="_TOUR", ThisKey="MaSoTour", OtherKey="MaSoTour", IsForeignKey=true)]
		public TOUR TOUR
		{
			get
			{
				return this._TOUR.Entity;
			}
			set
			{
				TOUR previousValue = this._TOUR.Entity;
				if (((previousValue != value) 
							|| (this._TOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUR.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._TOUR.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._MaSoTour = value.MaSoTour;
					}
					else
					{
						this._MaSoTour = default(int);
					}
					this.SendPropertyChanged("TOUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatHang")]
	public partial class DatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDatHang;
		
		private System.Nullable<int> _MaSoKhachHang;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private string _TongThanhTien;
		
		private string _TinhTrang;
		
		private string _GhiChu;
		
		private EntitySet<ChiTietDatHang> _ChiTietDatHangs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDatHangChanging(int value);
    partial void OnMaDatHangChanged();
    partial void OnMaSoKhachHangChanging(System.Nullable<int> value);
    partial void OnMaSoKhachHangChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnTongThanhTienChanging(string value);
    partial void OnTongThanhTienChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public DatHang()
		{
			this._ChiTietDatHangs = new EntitySet<ChiTietDatHang>(new Action<ChiTietDatHang>(this.attach_ChiTietDatHangs), new Action<ChiTietDatHang>(this.detach_ChiTietDatHangs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDatHang
		{
			get
			{
				return this._MaDatHang;
			}
			set
			{
				if ((this._MaDatHang != value))
				{
					this.OnMaDatHangChanging(value);
					this.SendPropertyChanging();
					this._MaDatHang = value;
					this.SendPropertyChanged("MaDatHang");
					this.OnMaDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoKhachHang", DbType="Int")]
		public System.Nullable<int> MaSoKhachHang
		{
			get
			{
				return this._MaSoKhachHang;
			}
			set
			{
				if ((this._MaSoKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaSoKhachHang = value;
					this.SendPropertyChanged("MaSoKhachHang");
					this.OnMaSoKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongThanhTien", DbType="NChar(10)")]
		public string TongThanhTien
		{
			get
			{
				return this._TongThanhTien;
			}
			set
			{
				if ((this._TongThanhTien != value))
				{
					this.OnTongThanhTienChanging(value);
					this.SendPropertyChanging();
					this._TongThanhTien = value;
					this.SendPropertyChanged("TongThanhTien");
					this.OnTongThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(50)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatHang_ChiTietDatHang", Storage="_ChiTietDatHangs", ThisKey="MaDatHang", OtherKey="MaDatHang")]
		public EntitySet<ChiTietDatHang> ChiTietDatHangs
		{
			get
			{
				return this._ChiTietDatHangs;
			}
			set
			{
				this._ChiTietDatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatHang", Storage="_KhachHang", ThisKey="MaSoKhachHang", OtherKey="MaSoKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DatHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DatHangs.Add(this);
						this._MaSoKhachHang = value.MaSoKhachHang;
					}
					else
					{
						this._MaSoKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDatHangs(ChiTietDatHang entity)
		{
			this.SendPropertyChanging();
			entity.DatHang = this;
		}
		
		private void detach_ChiTietDatHangs(ChiTietDatHang entity)
		{
			this.SendPropertyChanging();
			entity.DatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiaDiemThamQuan")]
	public partial class DiaDiemThamQuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSoTour;
		
		private int _MaSoDiaDiem;
		
		private string _TenDiaDiem;
		
		private string _MoTaDiaDiem;
		
		private string _HinhAnhDiaDiem;
		
		private EntityRef<TOUR> _TOUR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoTourChanging(int value);
    partial void OnMaSoTourChanged();
    partial void OnMaSoDiaDiemChanging(int value);
    partial void OnMaSoDiaDiemChanged();
    partial void OnTenDiaDiemChanging(string value);
    partial void OnTenDiaDiemChanged();
    partial void OnMoTaDiaDiemChanging(string value);
    partial void OnMoTaDiaDiemChanged();
    partial void OnHinhAnhDiaDiemChanging(string value);
    partial void OnHinhAnhDiaDiemChanged();
    #endregion
		
		public DiaDiemThamQuan()
		{
			this._TOUR = default(EntityRef<TOUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoTour", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSoTour
		{
			get
			{
				return this._MaSoTour;
			}
			set
			{
				if ((this._MaSoTour != value))
				{
					if (this._TOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoTourChanging(value);
					this.SendPropertyChanging();
					this._MaSoTour = value;
					this.SendPropertyChanged("MaSoTour");
					this.OnMaSoTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoDiaDiem", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSoDiaDiem
		{
			get
			{
				return this._MaSoDiaDiem;
			}
			set
			{
				if ((this._MaSoDiaDiem != value))
				{
					this.OnMaSoDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._MaSoDiaDiem = value;
					this.SendPropertyChanged("MaSoDiaDiem");
					this.OnMaSoDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDiaDiem", DbType="NVarChar(MAX)")]
		public string TenDiaDiem
		{
			get
			{
				return this._TenDiaDiem;
			}
			set
			{
				if ((this._TenDiaDiem != value))
				{
					this.OnTenDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._TenDiaDiem = value;
					this.SendPropertyChanged("TenDiaDiem");
					this.OnTenDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaDiaDiem", DbType="NVarChar(MAX)")]
		public string MoTaDiaDiem
		{
			get
			{
				return this._MoTaDiaDiem;
			}
			set
			{
				if ((this._MoTaDiaDiem != value))
				{
					this.OnMoTaDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._MoTaDiaDiem = value;
					this.SendPropertyChanged("MoTaDiaDiem");
					this.OnMoTaDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnhDiaDiem", DbType="NChar(50)")]
		public string HinhAnhDiaDiem
		{
			get
			{
				return this._HinhAnhDiaDiem;
			}
			set
			{
				if ((this._HinhAnhDiaDiem != value))
				{
					this.OnHinhAnhDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._HinhAnhDiaDiem = value;
					this.SendPropertyChanged("HinhAnhDiaDiem");
					this.OnHinhAnhDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_DiaDiemThamQuan", Storage="_TOUR", ThisKey="MaSoTour", OtherKey="MaSoTour", IsForeignKey=true)]
		public TOUR TOUR
		{
			get
			{
				return this._TOUR.Entity;
			}
			set
			{
				TOUR previousValue = this._TOUR.Entity;
				if (((previousValue != value) 
							|| (this._TOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUR.Entity = null;
						previousValue.DiaDiemThamQuans.Remove(this);
					}
					this._TOUR.Entity = value;
					if ((value != null))
					{
						value.DiaDiemThamQuans.Add(this);
						this._MaSoTour = value.MaSoTour;
					}
					else
					{
						this._MaSoTour = default(int);
					}
					this.SendPropertyChanged("TOUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DichVu")]
	public partial class DichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDichVu;
		
		private string _TenDichVu;
		
		private EntitySet<ChiTietDichVu> _ChiTietDichVus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDichVuChanging(int value);
    partial void OnMaDichVuChanged();
    partial void OnTenDichVuChanging(string value);
    partial void OnTenDichVuChanged();
    #endregion
		
		public DichVu()
		{
			this._ChiTietDichVus = new EntitySet<ChiTietDichVu>(new Action<ChiTietDichVu>(this.attach_ChiTietDichVus), new Action<ChiTietDichVu>(this.detach_ChiTietDichVus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDichVu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDichVu
		{
			get
			{
				return this._MaDichVu;
			}
			set
			{
				if ((this._MaDichVu != value))
				{
					this.OnMaDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaDichVu = value;
					this.SendPropertyChanged("MaDichVu");
					this.OnMaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDichVu", DbType="NVarChar(MAX)")]
		public string TenDichVu
		{
			get
			{
				return this._TenDichVu;
			}
			set
			{
				if ((this._TenDichVu != value))
				{
					this.OnTenDichVuChanging(value);
					this.SendPropertyChanging();
					this._TenDichVu = value;
					this.SendPropertyChanged("TenDichVu");
					this.OnTenDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_ChiTietDichVu", Storage="_ChiTietDichVus", ThisKey="MaDichVu", OtherKey="MaDichVu")]
		public EntitySet<ChiTietDichVu> ChiTietDichVus
		{
			get
			{
				return this._ChiTietDichVus;
			}
			set
			{
				this._ChiTietDichVus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDichVus(ChiTietDichVu entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = this;
		}
		
		private void detach_ChiTietDichVus(ChiTietDichVu entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSoKhachHang;
		
		private string _TenKhachHang;
		
		private string _GioiTinh;
		
		private string _CMND;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private System.Nullable<int> _MaQuocGia;
		
		private EntitySet<DatHang> _DatHangs;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
		private EntityRef<QuocTich> _QuocTich;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoKhachHangChanging(int value);
    partial void OnMaSoKhachHangChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnMaQuocGiaChanging(System.Nullable<int> value);
    partial void OnMaQuocGiaChanged();
    #endregion
		
		public KhachHang()
		{
			this._DatHangs = new EntitySet<DatHang>(new Action<DatHang>(this.attach_DatHangs), new Action<DatHang>(this.detach_DatHangs));
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			this._QuocTich = default(EntityRef<QuocTich>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoKhachHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSoKhachHang
		{
			get
			{
				return this._MaSoKhachHang;
			}
			set
			{
				if ((this._MaSoKhachHang != value))
				{
					this.OnMaSoKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaSoKhachHang = value;
					this.SendPropertyChanged("MaSoKhachHang");
					this.OnMaSoKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(50)")]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NChar(15)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuocGia", DbType="Int")]
		public System.Nullable<int> MaQuocGia
		{
			get
			{
				return this._MaQuocGia;
			}
			set
			{
				if ((this._MaQuocGia != value))
				{
					if (this._QuocTich.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQuocGiaChanging(value);
					this.SendPropertyChanging();
					this._MaQuocGia = value;
					this.SendPropertyChanged("MaQuocGia");
					this.OnMaQuocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatHang", Storage="_DatHangs", ThisKey="MaSoKhachHang", OtherKey="MaSoKhachHang")]
		public EntitySet<DatHang> DatHangs
		{
			get
			{
				return this._DatHangs;
			}
			set
			{
				this._DatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_TaiKhoan", Storage="_TaiKhoans", ThisKey="MaSoKhachHang", OtherKey="MaSo")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuocTich_KhachHang", Storage="_QuocTich", ThisKey="MaQuocGia", OtherKey="MaQuocGia", IsForeignKey=true)]
		public QuocTich QuocTich
		{
			get
			{
				return this._QuocTich.Entity;
			}
			set
			{
				QuocTich previousValue = this._QuocTich.Entity;
				if (((previousValue != value) 
							|| (this._QuocTich.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuocTich.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._QuocTich.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._MaQuocGia = value.MaQuocGia;
					}
					else
					{
						this._MaQuocGia = default(Nullable<int>);
					}
					this.SendPropertyChanged("QuocTich");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatHangs(DatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DatHangs(DatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTaiKhoan")]
	public partial class LoaiTaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiTaiKhoan;
		
		private string _TenLoaiTaiKhoan;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiTaiKhoanChanging(string value);
    partial void OnMaLoaiTaiKhoanChanged();
    partial void OnTenLoaiTaiKhoanChanging(string value);
    partial void OnTenLoaiTaiKhoanChanged();
    #endregion
		
		public LoaiTaiKhoan()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTaiKhoan", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiTaiKhoan
		{
			get
			{
				return this._MaLoaiTaiKhoan;
			}
			set
			{
				if ((this._MaLoaiTaiKhoan != value))
				{
					this.OnMaLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTaiKhoan = value;
					this.SendPropertyChanged("MaLoaiTaiKhoan");
					this.OnMaLoaiTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiTaiKhoan", DbType="NVarChar(50)")]
		public string TenLoaiTaiKhoan
		{
			get
			{
				return this._TenLoaiTaiKhoan;
			}
			set
			{
				if ((this._TenLoaiTaiKhoan != value))
				{
					this.OnTenLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiTaiKhoan = value;
					this.SendPropertyChanged("TenLoaiTaiKhoan");
					this.OnTenLoaiTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTaiKhoan_TaiKhoan", Storage="_TaiKhoans", ThisKey="MaLoaiTaiKhoan", OtherKey="MaLoaiTaiKhoan")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiKhoan = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTour")]
	public partial class LoaiTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiTour;
		
		private string _TenLoai;
		
		private EntitySet<TOUR> _TOURs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiTourChanging(int value);
    partial void OnMaLoaiTourChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiTour()
		{
			this._TOURs = new EntitySet<TOUR>(new Action<TOUR>(this.attach_TOURs), new Action<TOUR>(this.detach_TOURs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTour", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiTour
		{
			get
			{
				return this._MaLoaiTour;
			}
			set
			{
				if ((this._MaLoaiTour != value))
				{
					this.OnMaLoaiTourChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTour = value;
					this.SendPropertyChanged("MaLoaiTour");
					this.OnMaLoaiTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTour_TOUR", Storage="_TOURs", ThisKey="MaLoaiTour", OtherKey="MaLoaiTour")]
		public EntitySet<TOUR> TOURs
		{
			get
			{
				return this._TOURs;
			}
			set
			{
				this._TOURs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TOURs(TOUR entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTour = this;
		}
		
		private void detach_TOURs(TOUR entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSoNhanVien;
		
		private string _TenNhanVien;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private System.Nullable<int> _MaSoChucVu;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
		private EntityRef<ChucVu> _ChucVu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoNhanVienChanging(int value);
    partial void OnMaSoNhanVienChanged();
    partial void OnTenNhanVienChanging(string value);
    partial void OnTenNhanVienChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnMaSoChucVuChanging(System.Nullable<int> value);
    partial void OnMaSoChucVuChanged();
    #endregion
		
		public NhanVien()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			this._ChucVu = default(EntityRef<ChucVu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSoNhanVien
		{
			get
			{
				return this._MaSoNhanVien;
			}
			set
			{
				if ((this._MaSoNhanVien != value))
				{
					this.OnMaSoNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaSoNhanVien = value;
					this.SendPropertyChanged("MaSoNhanVien");
					this.OnMaSoNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhanVien", DbType="NVarChar(50)")]
		public string TenNhanVien
		{
			get
			{
				return this._TenNhanVien;
			}
			set
			{
				if ((this._TenNhanVien != value))
				{
					this.OnTenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._TenNhanVien = value;
					this.SendPropertyChanged("TenNhanVien");
					this.OnTenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(4)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="Char(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoChucVu", DbType="Int")]
		public System.Nullable<int> MaSoChucVu
		{
			get
			{
				return this._MaSoChucVu;
			}
			set
			{
				if ((this._MaSoChucVu != value))
				{
					if (this._ChucVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoChucVuChanging(value);
					this.SendPropertyChanging();
					this._MaSoChucVu = value;
					this.SendPropertyChanged("MaSoChucVu");
					this.OnMaSoChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_TaiKhoans", ThisKey="MaSoNhanVien", OtherKey="MaSoNV")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_NhanVien", Storage="_ChucVu", ThisKey="MaSoChucVu", OtherKey="MaSoChucVu", IsForeignKey=true)]
		public ChucVu ChucVu
		{
			get
			{
				return this._ChucVu.Entity;
			}
			set
			{
				ChucVu previousValue = this._ChucVu.Entity;
				if (((previousValue != value) 
							|| (this._ChucVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucVu.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._ChucVu.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._MaSoChucVu = value.MaSoChucVu;
					}
					else
					{
						this._MaSoChucVu = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChucVu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHUONGTIEN")]
	public partial class PHUONGTIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSoPhuongTien;
		
		private string _TenPhuongTien;
		
		private string _LoaiPhuongTien;
		
		private EntitySet<ChiTietPhuongTien> _ChiTietPhuongTiens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoPhuongTienChanging(int value);
    partial void OnMaSoPhuongTienChanged();
    partial void OnTenPhuongTienChanging(string value);
    partial void OnTenPhuongTienChanged();
    partial void OnLoaiPhuongTienChanging(string value);
    partial void OnLoaiPhuongTienChanged();
    #endregion
		
		public PHUONGTIEN()
		{
			this._ChiTietPhuongTiens = new EntitySet<ChiTietPhuongTien>(new Action<ChiTietPhuongTien>(this.attach_ChiTietPhuongTiens), new Action<ChiTietPhuongTien>(this.detach_ChiTietPhuongTiens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoPhuongTien", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSoPhuongTien
		{
			get
			{
				return this._MaSoPhuongTien;
			}
			set
			{
				if ((this._MaSoPhuongTien != value))
				{
					this.OnMaSoPhuongTienChanging(value);
					this.SendPropertyChanging();
					this._MaSoPhuongTien = value;
					this.SendPropertyChanged("MaSoPhuongTien");
					this.OnMaSoPhuongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhuongTien", DbType="NVarChar(50)")]
		public string TenPhuongTien
		{
			get
			{
				return this._TenPhuongTien;
			}
			set
			{
				if ((this._TenPhuongTien != value))
				{
					this.OnTenPhuongTienChanging(value);
					this.SendPropertyChanging();
					this._TenPhuongTien = value;
					this.SendPropertyChanged("TenPhuongTien");
					this.OnTenPhuongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiPhuongTien", DbType="NChar(10)")]
		public string LoaiPhuongTien
		{
			get
			{
				return this._LoaiPhuongTien;
			}
			set
			{
				if ((this._LoaiPhuongTien != value))
				{
					this.OnLoaiPhuongTienChanging(value);
					this.SendPropertyChanging();
					this._LoaiPhuongTien = value;
					this.SendPropertyChanged("LoaiPhuongTien");
					this.OnLoaiPhuongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUONGTIEN_ChiTietPhuongTien", Storage="_ChiTietPhuongTiens", ThisKey="MaSoPhuongTien", OtherKey="MaSoPhuongTien")]
		public EntitySet<ChiTietPhuongTien> ChiTietPhuongTiens
		{
			get
			{
				return this._ChiTietPhuongTiens;
			}
			set
			{
				this._ChiTietPhuongTiens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhuongTiens(ChiTietPhuongTien entity)
		{
			this.SendPropertyChanging();
			entity.PHUONGTIEN = this;
		}
		
		private void detach_ChiTietPhuongTiens(ChiTietPhuongTien entity)
		{
			this.SendPropertyChanging();
			entity.PHUONGTIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuocTich")]
	public partial class QuocTich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQuocGia;
		
		private string _TenQuocGia;
		
		private EntitySet<KhachHang> _KhachHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuocGiaChanging(int value);
    partial void OnMaQuocGiaChanged();
    partial void OnTenQuocGiaChanging(string value);
    partial void OnTenQuocGiaChanged();
    #endregion
		
		public QuocTich()
		{
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuocGia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaQuocGia
		{
			get
			{
				return this._MaQuocGia;
			}
			set
			{
				if ((this._MaQuocGia != value))
				{
					this.OnMaQuocGiaChanging(value);
					this.SendPropertyChanging();
					this._MaQuocGia = value;
					this.SendPropertyChanged("MaQuocGia");
					this.OnMaQuocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuocGia", DbType="NVarChar(50)")]
		public string TenQuocGia
		{
			get
			{
				return this._TenQuocGia;
			}
			set
			{
				if ((this._TenQuocGia != value))
				{
					this.OnTenQuocGiaChanging(value);
					this.SendPropertyChanging();
					this._TenQuocGia = value;
					this.SendPropertyChanged("TenQuocGia");
					this.OnTenQuocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuocTich_KhachHang", Storage="_KhachHangs", ThisKey="MaQuocGia", OtherKey="MaQuocGia")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.QuocTich = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.QuocTich = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDangNhap;
		
		private System.Nullable<int> _MaSo;
		
		private System.Nullable<int> _MaSoNV;
		
		private string _MatKhau;
		
		private string _MaLoaiTaiKhoan;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<LoaiTaiKhoan> _LoaiTaiKhoan;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMaSoChanging(System.Nullable<int> value);
    partial void OnMaSoChanged();
    partial void OnMaSoNVChanging(System.Nullable<int> value);
    partial void OnMaSoNVChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaLoaiTaiKhoanChanging(string value);
    partial void OnMaLoaiTaiKhoanChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			this._LoaiTaiKhoan = default(EntityRef<LoaiTaiKhoan>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSo", DbType="Int")]
		public System.Nullable<int> MaSo
		{
			get
			{
				return this._MaSo;
			}
			set
			{
				if ((this._MaSo != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoChanging(value);
					this.SendPropertyChanging();
					this._MaSo = value;
					this.SendPropertyChanged("MaSo");
					this.OnMaSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoNV", DbType="Int")]
		public System.Nullable<int> MaSoNV
		{
			get
			{
				return this._MaSoNV;
			}
			set
			{
				if ((this._MaSoNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoNVChanging(value);
					this.SendPropertyChanging();
					this._MaSoNV = value;
					this.SendPropertyChanged("MaSoNV");
					this.OnMaSoNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NChar(10)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTaiKhoan", DbType="NChar(10)")]
		public string MaLoaiTaiKhoan
		{
			get
			{
				return this._MaLoaiTaiKhoan;
			}
			set
			{
				if ((this._MaLoaiTaiKhoan != value))
				{
					if (this._LoaiTaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTaiKhoan = value;
					this.SendPropertyChanged("MaLoaiTaiKhoan");
					this.OnMaLoaiTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_TaiKhoan", Storage="_KhachHang", ThisKey="MaSo", OtherKey="MaSoKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._MaSo = value.MaSoKhachHang;
					}
					else
					{
						this._MaSo = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTaiKhoan_TaiKhoan", Storage="_LoaiTaiKhoan", ThisKey="MaLoaiTaiKhoan", OtherKey="MaLoaiTaiKhoan", IsForeignKey=true)]
		public LoaiTaiKhoan LoaiTaiKhoan
		{
			get
			{
				return this._LoaiTaiKhoan.Entity;
			}
			set
			{
				LoaiTaiKhoan previousValue = this._LoaiTaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTaiKhoan.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._LoaiTaiKhoan.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._MaLoaiTaiKhoan = value.MaLoaiTaiKhoan;
					}
					else
					{
						this._MaLoaiTaiKhoan = default(string);
					}
					this.SendPropertyChanged("LoaiTaiKhoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_NhanVien", ThisKey="MaSoNV", OtherKey="MaSoNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._MaSoNV = value.MaSoNhanVien;
					}
					else
					{
						this._MaSoNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tinh")]
	public partial class Tinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSoTinh;
		
		private string _TenTinh;
		
		private EntitySet<TOUR> _TOURs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoTinhChanging(int value);
    partial void OnMaSoTinhChanged();
    partial void OnTenTinhChanging(string value);
    partial void OnTenTinhChanged();
    #endregion
		
		public Tinh()
		{
			this._TOURs = new EntitySet<TOUR>(new Action<TOUR>(this.attach_TOURs), new Action<TOUR>(this.detach_TOURs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoTinh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSoTinh
		{
			get
			{
				return this._MaSoTinh;
			}
			set
			{
				if ((this._MaSoTinh != value))
				{
					this.OnMaSoTinhChanging(value);
					this.SendPropertyChanging();
					this._MaSoTinh = value;
					this.SendPropertyChanged("MaSoTinh");
					this.OnMaSoTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTinh", DbType="NVarChar(50)")]
		public string TenTinh
		{
			get
			{
				return this._TenTinh;
			}
			set
			{
				if ((this._TenTinh != value))
				{
					this.OnTenTinhChanging(value);
					this.SendPropertyChanging();
					this._TenTinh = value;
					this.SendPropertyChanged("TenTinh");
					this.OnTenTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tinh_TOUR", Storage="_TOURs", ThisKey="MaSoTinh", OtherKey="MaSoTinh")]
		public EntitySet<TOUR> TOURs
		{
			get
			{
				return this._TOURs;
			}
			set
			{
				this._TOURs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TOURs(TOUR entity)
		{
			this.SendPropertyChanging();
			entity.Tinh = this;
		}
		
		private void detach_TOURs(TOUR entity)
		{
			this.SendPropertyChanging();
			entity.Tinh = null;
		}
	}
}
#pragma warning restore 1591
